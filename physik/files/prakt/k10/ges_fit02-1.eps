%!PS-Adobe-2.0
%%Title: ges_fit02-1.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sat Nov 28 13:30:06 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ges_fit02-1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Michael Kopp,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Nov 28 13:30:06 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6199 0 R
-63 0 V
stroke
714 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
798 840 M
63 0 V
6199 0 R
-63 0 V
stroke
714 840 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MRshow
1.000 UL
LTb
798 1260 M
63 0 V
6199 0 R
-63 0 V
stroke
714 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MRshow
1.000 UL
LTb
798 1680 M
63 0 V
6199 0 R
-63 0 V
stroke
714 1680 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MRshow
1.000 UL
LTb
798 2100 M
63 0 V
6199 0 R
-63 0 V
stroke
714 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 800)]
] -46.7 MRshow
1.000 UL
LTb
798 2520 M
63 0 V
6199 0 R
-63 0 V
stroke
714 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
1.000 UL
LTb
798 2940 M
63 0 V
6199 0 R
-63 0 V
stroke
714 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1200)]
] -46.7 MRshow
1.000 UL
LTb
798 3360 M
63 0 V
6199 0 R
-63 0 V
stroke
714 3360 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1400)]
] -46.7 MRshow
1.000 UL
LTb
798 3780 M
63 0 V
6199 0 R
-63 0 V
stroke
714 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1600)]
] -46.7 MRshow
1.000 UL
LTb
798 4200 M
63 0 V
6199 0 R
-63 0 V
stroke
714 4200 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1800)]
] -46.7 MRshow
1.000 UL
LTb
798 4620 M
63 0 V
6199 0 R
-63 0 V
stroke
714 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MRshow
1.000 UL
LTb
967 420 M
0 63 V
0 4137 R
0 -63 V
stroke
967 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1644 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1644 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
2321 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2321 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
2998 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2998 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
1.000 UL
LTb
3675 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3675 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
1.000 UL
LTb
4352 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4352 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
5029 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5029 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12)]
] -46.7 MCshow
1.000 UL
LTb
5706 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5706 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 14)]
] -46.7 MCshow
1.000 UL
LTb
6383 420 M
0 63 V
0 4137 R
0 -63 V
stroke
6383 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16)]
] -46.7 MCshow
1.000 UL
LTb
7060 420 M
0 63 V
0 4137 R
0 -63 V
stroke
7060 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 18)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 4620 N
798 420 L
6262 0 V
0 4200 V
-6262 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Intensitaet in Cnt/min)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
3929 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Abschirmung: Laenge in cm)]
] -46.7 MCshow
LTb
3929 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Zerfall mit angefittetem Zerfallsgesetz)]
] -46.7 MCshow
LCb setrgbcolor
LTb
1.000 UP
3337 3570 M
[ [(Helvetica) 140.0 0.0 true true 0 (Bei Aluminium wurde der letzte, bei Blei )]
] -46.7 MLshow
3337 3430 M
[ [(Helvetica) 140.0 0.0 true true 0 (die letzten beiden Messwerte )]
] -46.7 MLshow
3337 3290 M
[ [(Helvetica) 140.0 0.0 true true 0 (beim Fit nicht beruecksichtigt!)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6409 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Aluminium; Messwerte)]
] -46.7 MRshow
LT0
6493 4487 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
967 3484 M
0 162 V
936 3484 M
62 0 V
-62 162 R
62 0 V
1813 2568 M
0 136 V
-31 -136 R
62 0 V
-62 136 R
62 0 V
816 -745 R
0 116 V
-31 -116 R
62 0 V
-62 116 R
62 0 V
815 -591 R
0 97 V
-31 -97 R
62 0 V
-62 97 R
62 0 V
815 -429 R
0 80 V
-31 -80 R
62 0 V
-62 80 R
62 0 V
5198 994 M
0 71 V
-31 -71 R
62 0 V
-62 71 R
62 0 V
6045 807 M
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
6891 744 M
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
967 3565 Pls
1813 2636 Pls
2660 2017 Pls
3506 1532 Pls
4352 1192 Pls
5198 1030 Pls
6045 836 Pls
6891 771 Pls
6692 4487 Pls
1.000 UL
LT1
LTb
6409 4347 M
[ [(Helvetica) 140.0 0.0 true true 0 (Aluminium; Fit)]
] -46.7 MRshow
LT1
6493 4347 M
399 0 V
798 3778 M
63 -85 V
64 -82 V
63 -80 V
63 -79 V
63 -76 V
64 -74 V
63 -73 V
63 -71 V
63 -68 V
64 -68 V
63 -65 V
63 -64 V
63 -62 V
64 -61 V
63 -59 V
63 -58 V
63 -56 V
64 -55 V
63 -53 V
63 -52 V
63 -51 V
64 -50 V
63 -48 V
63 -47 V
63 -46 V
64 -44 V
63 -44 V
63 -42 V
63 -42 V
64 -40 V
63 -39 V
63 -39 V
63 -37 V
64 -37 V
63 -35 V
63 -35 V
63 -34 V
64 -32 V
63 -33 V
63 -31 V
63 -30 V
64 -30 V
63 -29 V
63 -28 V
63 -28 V
64 -27 V
63 -26 V
63 -25 V
63 -25 V
64 -24 V
63 -24 V
63 -23 V
63 -23 V
64 -21 V
63 -22 V
63 -21 V
63 -20 V
64 -20 V
63 -19 V
63 -19 V
63 -18 V
64 -18 V
63 -17 V
63 -17 V
63 -17 V
64 -16 V
63 -16 V
63 -15 V
63 -15 V
64 -14 V
63 -15 V
63 -13 V
63 -14 V
64 -13 V
63 -13 V
63 -12 V
63 -12 V
64 -12 V
63 -12 V
63 -11 V
63 -11 V
64 -11 V
63 -10 V
63 -11 V
63 -9 V
64 -10 V
63 -10 V
63 -9 V
63 -9 V
64 -8 V
63 -9 V
63 -8 V
63 -8 V
64 -8 V
63 -8 V
63 -7 V
63 -8 V
64 -7 V
63 -7 V
1.000 UP
stroke
LT2
LTb
6409 4207 M
[ [(Helvetica) 140.0 0.0 true true 0 (Blei; Messwerte)]
] -46.7 MRshow
LT2
6493 4207 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
967 3484 M
0 162 V
936 3484 M
62 0 V
-62 162 R
62 0 V
138 -916 R
0 141 V
-31 -141 R
62 0 V
-62 141 R
62 0 V
139 -718 R
0 123 V
-31 -123 R
62 0 V
-62 123 R
62 0 V
138 -486 R
0 110 V
-31 -110 R
62 0 V
-62 110 R
62 0 V
138 -401 R
0 98 V
-31 -98 R
62 0 V
-62 98 R
62 0 V
138 -378 R
0 84 V
-31 -84 R
62 0 V
-62 84 R
62 0 V
139 -221 R
0 76 V
-31 -76 R
62 0 V
-62 76 R
62 0 V
2152 925 M
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
2321 802 M
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
2490 736 M
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
2660 665 M
0 48 V
-31 -48 R
62 0 V
-62 48 R
62 0 V
967 3565 Crs
1136 2801 Crs
1306 2215 Crs
1475 1845 Crs
1644 1548 Crs
1813 1261 Crs
1983 1120 Crs
2152 958 Crs
2321 831 Crs
2490 763 Crs
2660 689 Crs
6692 4207 Crs
1.000 UL
LT3
LTb
6409 4067 M
[ [(Helvetica) 140.0 0.0 true true 0 (Blei; Fit)]
] -46.7 MRshow
LT3
6493 4067 M
399 0 V
798 4439 M
63 -369 V
64 -335 V
63 -304 V
63 -277 V
63 -251 V
64 -228 V
63 -207 V
63 -188 V
63 -170 V
64 -155 V
63 -141 V
63 -128 V
63 -116 V
64 -106 V
63 -96 V
63 -87 V
63 -79 V
64 -72 V
63 -65 V
63 -59 V
63 -54 V
64 -49 V
63 -44 V
63 -40 V
63 -37 V
64 -33 V
63 -30 V
63 -28 V
63 -25 V
64 -22 V
63 -21 V
63 -18 V
63 -17 V
64 -16 V
63 -14 V
63 -12 V
63 -12 V
64 -10 V
63 -10 V
63 -9 V
63 -7 V
64 -8 V
63 -6 V
63 -6 V
63 -5 V
64 -5 V
63 -4 V
63 -4 V
63 -4 V
64 -3 V
63 -3 V
63 -3 V
63 -3 V
64 -2 V
63 -2 V
63 -2 V
63 -1 V
64 -2 V
63 -1 V
63 -2 V
63 -1 V
64 -1 V
63 -1 V
63 -1 V
63 0 V
64 -1 V
63 -1 V
63 0 V
63 -1 V
64 0 V
63 -1 V
63 0 V
63 0 V
64 -1 V
63 0 V
63 0 V
63 -1 V
64 0 V
63 0 V
63 0 V
63 0 V
64 -1 V
63 0 V
63 0 V
63 0 V
64 0 V
63 0 V
63 0 V
63 0 V
64 0 V
63 0 V
63 0 V
63 0 V
64 -1 V
63 0 V
63 0 V
63 0 V
64 0 V
63 0 V
stroke
LTb
798 4620 N
798 420 L
6262 0 V
0 4200 V
-6262 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
