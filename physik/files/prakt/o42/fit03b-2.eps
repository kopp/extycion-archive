%!PS-Adobe-2.0
%%Title: fit03b-2.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sun Nov 15 11:54:31 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fit03b-2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Michael Kopp,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Nov 15 11:54:31 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 840 M
6346 0 V
stroke
LTb
714 840 M
63 0 V
6283 0 R
-63 0 V
stroke
630 840 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 1344 M
6346 0 V
stroke
LTb
714 1344 M
63 0 V
6283 0 R
-63 0 V
stroke
630 1344 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 1848 M
6346 0 V
stroke
LTb
714 1848 M
63 0 V
6283 0 R
-63 0 V
stroke
630 1848 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 2352 M
6346 0 V
stroke
LTb
714 2352 M
63 0 V
6283 0 R
-63 0 V
stroke
630 2352 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 2856 M
6346 0 V
stroke
LTb
714 2856 M
63 0 V
6283 0 R
-63 0 V
stroke
630 2856 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 3360 M
6346 0 V
stroke
LTb
714 3360 M
63 0 V
6283 0 R
-63 0 V
stroke
630 3360 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 3864 M
6346 0 V
stroke
LTb
714 3864 M
63 0 V
6283 0 R
-63 0 V
stroke
630 3864 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 4368 M
6346 0 V
stroke
LTb
714 4368 M
63 0 V
6283 0 R
-63 0 V
stroke
630 4368 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 140)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 4872 M
6346 0 V
stroke
LTb
714 4872 M
63 0 V
6283 0 R
-63 0 V
stroke
630 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 160)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 840 M
0 4032 V
stroke
LTb
714 840 M
0 63 V
0 3969 R
0 -63 V
stroke
714 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1690 840 M
0 4032 V
stroke
LTb
1690 840 M
0 63 V
0 3969 R
0 -63 V
stroke
1690 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2667 840 M
0 4032 V
stroke
LTb
2667 840 M
0 63 V
0 3969 R
0 -63 V
stroke
2667 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3643 840 M
0 4032 V
stroke
LTb
3643 840 M
0 63 V
0 3969 R
0 -63 V
stroke
3643 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4619 840 M
0 4032 V
stroke
LTb
4619 840 M
0 63 V
0 3969 R
0 -63 V
stroke
4619 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5596 840 M
0 4032 V
stroke
LTb
5596 840 M
0 63 V
0 3969 R
0 -63 V
stroke
5596 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6572 840 M
0 4032 V
stroke
LTb
6572 840 M
0 63 V
0 3969 R
0 -63 V
stroke
6572 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 4872 N
714 840 L
6346 0 V
0 4032 V
-6346 0 V
Z stroke
LCb setrgbcolor
140 2856 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Photodiodenstrom in Mycro-Ampere)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
3887 490 M
[ [(Helvetica) 140.0 0.0 true true 0 (Einfallswinkel in Grad)]
] -46.7 MCshow
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
3320 273 M
[ [(Helvetica) 140.0 0.0 true true 0 (Parallel nach Fresnet)]
] -46.7 MRshow
LT0
3404 273 M
399 0 V
714 1417 M
64 -3 V
64 -4 V
64 -3 V
64 -4 V
65 -4 V
64 -5 V
64 -4 V
64 -5 V
64 -5 V
64 -5 V
64 -5 V
64 -6 V
64 -6 V
64 -6 V
65 -6 V
64 -6 V
64 -7 V
64 -7 V
64 -7 V
64 -7 V
64 -7 V
64 -8 V
64 -8 V
64 -8 V
65 -8 V
64 -9 V
64 -8 V
64 -9 V
64 -9 V
64 -9 V
64 -10 V
64 -10 V
64 -9 V
64 -10 V
65 -10 V
64 -11 V
64 -10 V
64 -11 V
64 -11 V
64 -10 V
64 -11 V
64 -11 V
64 -12 V
64 -11 V
65 -11 V
64 -12 V
64 -11 V
64 -12 V
64 -11 V
64 -12 V
64 -11 V
64 -12 V
64 -11 V
64 -11 V
65 -11 V
64 -11 V
64 -11 V
64 -10 V
64 -10 V
64 -10 V
64 -9 V
64 -9 V
64 -8 V
64 -8 V
65 -7 V
64 -6 V
64 -6 V
64 -4 V
64 -4 V
64 -3 V
64 -1 V
64 0 V
64 2 V
64 3 V
65 5 V
64 7 V
64 9 V
64 11 V
64 14 V
64 17 V
64 19 V
64 23 V
64 27 V
64 30 V
65 35 V
64 39 V
64 45 V
64 49 V
64 56 V
64 62 V
64 69 V
64 77 V
64 85 V
64 94 V
65 104 V
64 114 V
64 126 V
64 139 V
64 152 V
1.000 UP
stroke
LT1
LTb
3320 133 M
[ [(Helvetica) 140.0 0.0 true true 0 (Parallel Messwerte)]
] -46.7 MRshow
LT1
3404 133 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 1438 M
0 -12 V
-31 12 R
62 0 V
-62 -12 R
62 0 V
945 -66 R
0 -10 V
-31 10 R
62 0 V
-62 -10 R
62 0 V
457 -53 R
0 -9 V
-31 9 R
62 0 V
-62 -9 R
62 0 V
458 -66 R
0 -8 V
-31 8 R
62 0 V
-62 -8 R
62 0 V
457 -73 R
0 -6 V
-31 6 R
62 0 V
-62 -6 R
62 0 V
457 -81 R
0 -4 V
-31 4 R
62 0 V
-62 -4 R
62 0 V
457 -78 R
0 -3 V
-31 3 R
62 0 V
-62 -3 R
62 0 V
213 -36 R
0 -2 V
-31 2 R
62 0 V
-62 -2 R
62 0 V
213 -37 R
0 -1 V
-31 1 R
62 0 V
-62 -1 R
62 0 V
213 -27 R
0 -1 V
-31 1 R
62 0 V
-62 -1 R
62 0 V
213 -14 R
0 -1 V
-31 1 R
62 0 V
-62 -1 R
62 0 V
213 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
214 22 R
0 -1 V
-31 1 R
62 0 V
-62 -1 R
62 0 V
213 56 R
0 -2 V
-31 2 R
62 0 V
-62 -2 R
62 0 V
213 98 R
0 -3 V
-31 3 R
62 0 V
-62 -3 R
62 0 V
213 154 R
0 -7 V
-31 7 R
62 0 V
-62 -7 R
62 0 V
213 234 R
0 -11 V
-31 11 R
62 0 V
-62 -11 R
6603 1390 L
164 257 R
0 -16 V
-31 16 R
62 0 V
-62 -16 R
62 0 V
714 1432 Pls
1690 1355 Pls
2178 1292 Pls
2667 1218 Pls
3155 1138 Pls
3643 1052 Pls
4131 971 Pls
4375 932 Pls
4619 894 Pls
4863 866 Pls
5107 851 Pls
5351 850 Pls
5596 871 Pls
5840 926 Pls
6084 1021 Pls
6328 1170 Pls
6572 1395 Pls
6767 1639 Pls
3603 133 Pls
1.000 UL
LT2
LTb
5735 273 M
[ [(Helvetica) 140.0 0.0 true true 0 (Senkrecht nach Fresnet)]
] -46.7 MRshow
LT2
5819 273 M
399 0 V
714 1544 M
64 3 V
64 3 V
64 3 V
64 4 V
65 4 V
64 4 V
64 5 V
64 4 V
64 5 V
64 5 V
64 5 V
64 6 V
64 6 V
64 6 V
65 6 V
64 7 V
64 6 V
64 8 V
64 7 V
64 8 V
64 8 V
64 8 V
64 9 V
64 8 V
65 10 V
64 9 V
64 10 V
64 10 V
64 11 V
64 11 V
64 11 V
64 12 V
64 12 V
64 13 V
65 13 V
64 13 V
64 14 V
64 15 V
64 14 V
64 16 V
64 16 V
64 16 V
64 17 V
64 17 V
65 18 V
64 19 V
64 19 V
64 20 V
64 20 V
64 21 V
64 22 V
64 23 V
64 23 V
64 24 V
65 24 V
64 26 V
64 26 V
64 27 V
64 28 V
64 29 V
64 30 V
64 31 V
64 32 V
64 33 V
65 34 V
64 35 V
64 36 V
64 37 V
64 39 V
64 40 V
64 41 V
64 42 V
64 44 V
64 45 V
65 47 V
64 48 V
64 49 V
64 52 V
64 53 V
64 54 V
64 57 V
64 58 V
64 60 V
64 62 V
65 64 V
64 67 V
64 68 V
64 70 V
64 73 V
64 75 V
64 78 V
64 80 V
64 82 V
64 86 V
65 88 V
64 90 V
64 94 V
64 97 V
64 100 V
1.000 UP
stroke
LT3
LTb
5735 133 M
[ [(Helvetica) 140.0 0.0 true true 0 (Senkrecht Messwerte)]
] -46.7 MRshow
LT3
5819 133 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 1564 M
0 -69 V
-31 69 R
62 0 V
-62 -69 R
62 0 V
945 134 R
0 -76 V
-31 76 R
62 0 V
-62 -76 R
62 0 V
457 123 R
0 -79 V
-31 79 R
62 0 V
-62 -79 R
62 0 V
458 143 R
0 -86 V
-31 86 R
62 0 V
-62 -86 R
62 0 V
457 194 R
0 -96 V
-31 96 R
62 0 V
-62 -96 R
62 0 V
457 239 R
0 -110 V
-31 110 R
62 0 V
-62 -110 R
62 0 V
457 298 R
0 -128 V
-31 128 R
62 0 V
-62 -128 R
62 0 V
213 258 R
0 -140 V
-31 140 R
62 0 V
-62 -140 R
62 0 V
213 259 R
0 -152 V
-31 152 R
62 0 V
-62 -152 R
62 0 V
213 300 R
0 -166 V
-31 166 R
62 0 V
-62 -166 R
62 0 V
213 309 R
0 -179 V
-31 179 R
62 0 V
-62 -179 R
62 0 V
213 385 R
0 -199 V
-31 199 R
62 0 V
-62 -199 R
62 0 V
214 337 R
0 -212 V
-31 212 R
62 0 V
-62 -212 R
62 0 V
213 429 R
0 -233 V
-31 233 R
62 0 V
-62 -233 R
62 0 V
213 479 R
0 -256 V
-31 256 R
62 0 V
-62 -256 R
62 0 V
213 499 R
0 -279 V
-31 279 R
62 0 V
-62 -279 R
62 0 V
213 538 R
0 -303 V
-31 303 R
6603 4028 L
-62 -303 R
62 0 V
164 502 R
0 -323 V
-31 323 R
62 0 V
-62 -323 R
62 0 V
714 1529 Crs
1690 1591 Crs
2178 1636 Crs
2667 1697 Crs
3155 1800 Crs
3643 1936 Crs
4131 2115 Crs
4375 2239 Crs
4619 2352 Crs
4863 2493 Crs
5107 2629 Crs
5351 2826 Crs
5596 2957 Crs
5840 3163 Crs
6084 3398 Crs
6328 3630 Crs
6572 3877 Crs
6767 4066 Crs
6018 133 Crs
1.000 UL
LTb
714 4872 N
714 840 L
6346 0 V
0 4032 V
-6346 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
